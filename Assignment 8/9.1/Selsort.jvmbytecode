// Exercise 9.1 (ii)

/*
public static void SelectionSort(int[] arr) {
  for (int i = 0; i < arr.length; i++) {
      int least = i;
      for (int j = i + 1; j < arr.length; j++)
        if (arr[j] < arr[least])
          least = j;
      int tmp = arr[i];
      arr[i] = arr[least];
      arr[least] = tmp;
    }
  }
}
*/

public static void SelectionSort(int[]);
  descriptor: ([I)V
  flags: (0x0009) ACC_PUBLIC, ACC_STATIC
  Code:
    stack=4, locals=4, args_size=1
        0: iconst_0                             // Push int constant 0
        1: istore_1                             // Store into local variable array at index 1 (i) (i = 0). localvar[1] = 0
        2: iload_1                              // Load value of local variable 1 (i)
        3: aload_0                              // Load reference to argument 0 (arr)
        4: arraylength                          // Get length of array (arr)
        5: if_icmpge     57                     // value1 >= value2 (i >= arr.length), goto instruction 57 
        8: iload_1                              // Load value of local variable 1 (i)
        9: istore_2                             // Store int into local variable 2 (least)
      10: iload_1                               // Load value of local variable 1 (i)
      11: iconst_1                              // Push int constant 1
      12: iadd                                  // Add two ints from top of stack, push result onto stack (i + 1)
      13: istore_3                              // Store into local variable 3 (j)
      14: iload_3                               // Load value of local variable 3 (j)
      15: aload_0                               // Load reference to argument 0 (arr)
      16: arraylength                           // Get length of array (arr)
      17: if_icmpge     37                      // value1 >= value2 (j >= arr.length), goto instruction 37
      20: aload_0                               // Load reference to argument 0 (arr)
      21: iload_3                               // Load value of local variable 3 (j)
      22: iaload                                // Push value at arr[j]
      23: aload_0                               // Load reference to argument 0 (arr)
      24: iload_2                               // Load value of local variable 2 (least)
      25: iaload                                // Push value at arr[least]
      26: if_icmpge     31                      // value1 >= value 2, go to instruction 31
      29: iload_3                               // Load value of local variable 3 (j)
      30: istore_2                              // Store int into local variable 2 (least)
      31: iinc          3, 1                    // increment local variable by constant. Format: incc index const. j++
      34: goto          14                      // Jump to instruction 14. for (int j = i + 1; j < arr.length; j++)
      37: aload_0                               // Load reference to argument 0 (arr)
      38: iload_1                               // Load value of local variable 1 (i)
      39: iaload                                // Push value at arr[i]
      40: istore_3                              // Store into local variable 3 (j)
      41: aload_0                               // Load reference to argument 0 (arr)
      42: iload_1                               // Load value of local variable 1 (i)
      43: aload_0                               // Load reference to argument 0 (arr)
      44: iload_2                               // Load value of local variable 2 (least)
      45: iaload                                // Push value at arr[least]
      46: iastore                               // Store value at arr[i]
      47: aload_0                               // Load reference to argument 0 (arr)
      48: iload_2                               // Load value of local variable 2 (least)
      49: iload_3                               // Load value of local variable 3 (j)
      50: iastore                               // Store value at arr[least]
      51: iinc          1, 1                    // Increment local variable by constant. Format: incc index const. i++
      54: goto          2                       // Jump to instruction 2. for (int i = 0; i < arr.length; i++) {
      57: return                                // Return

      //ASK TA: Hvor er tmp ? XD (tihi)